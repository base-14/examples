# Database config
spring.datasource.platform=mysql
spring.datasource.url=jdbc:mysql://localhost:3306/company?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Service identification
spring.application.name=java-spring-boot-otel
server.port=8080

## Actuator configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.enable.http.server.requests=true
management.metrics.distribution.percentiles-histogram.http.client.requests=true
management.metrics.enable.http.client.requests=true
management.metrics.enable.all=true

## OpenTelemetry Management Properties
# Enable OpenTelemetry SDK
otel.sdk.disabled=false

# OTLP Exporter Configuration
otel.exporter.otlp.protocol=http/protobuf
otel.exporter.otlp.endpoint=http://localhost:4318

# Traces Configuration
otel.traces.exporter=otlp
# otel.traces.sampler=always_on  # Options: always_on, always_off, traceidratio, parentbased_always_on, parentbased_always_off

# Metrics Configuration
otel.metrics.exporter=otlp, prometheus

# Resource Attributes
otel.resource.attributes=service.name=${spring.application.name},service.namespace=base14,deployment.environment=dev,service.version=0.0.1-SNAPSHOT

# Propagators
otel.propagators=tracecontext,baggage

# Logging Configuration
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.io.opentelemetry=DEBUG
logging.level.io.micrometer=DEBUG

# Debug logging (uncomment for troubleshooting)
# logging.level.org.springframework.boot.actuate.metrics=DEBUG
# logging.level.io.micrometer=DEBUG
# logging.level.io.opentelemetry=TRACE
# logging.level.io.opentelemetry.exporter.otlp=DEBUG
# logging.level.io.opentelemetry.sdk.metrics=DEBUG
# logging.level.io.opentelemetry.sdk.metrics.export=DEBUG
# logging.level.io.opentelemetry.sdk.common=DEBUG
# logging.level.io.opentelemetry.instrumentation=DEBUG