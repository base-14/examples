import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}


group = 'com.base14.demo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

description = 'Demo project for Spring Boot'

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:2.16.0")
    }
}


dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation platform(SpringBootPlugin.BOM_COORDINATES)
    implementation(platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:2.16.0"))
    implementation("io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter")


    // Micrometer for observability (includes OpenTelemetry bridge)
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
//    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'

    // Optional: For manual instrumentation
//    implementation 'io.opentelemetry:opentelemetry-api'
//    implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations'

    // Auto-configuration processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Database
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

bootJar {
    mainClass = 'com.base14.demo.DemoApplication'
}

springBoot {
    buildInfo {
    }
}

